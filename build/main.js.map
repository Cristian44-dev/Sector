{"version":3,"sources":["main.js"],"names":["d","document","options","rootMargin","threshold","des","$navegacion","querySelectorAll","$navegacion__barra","querySelector","$icons","$navegacion__ul","observer","IntersectionObserver","desplazamiento","entries","section_active","section_active_number","dataset","section","forEach","element","isIntersecting","target","section_number","parseInt","style","backgroundColor","color","elem","setAttribute","removeAttribute","transform","item","observe"],"mappings":"AAAA,MAAMA,EAAIC,SACJC,QAAU,CACZC,WAAY,MACZC,UAAW,IAEf,IAAIC,IAAM,EACV,MAAMC,YAAcN,EAAEO,iBAAiB,kBACjCC,mBAAqBR,EAAES,cAAc,UACrCC,OAASV,EAAEO,iBAAiB,YAC5BI,gBAAkBX,EAAES,cAAc,6BAClCG,SAAW,IAAIC,qBAAqBC,eAAgBZ,SAG1D,SAASY,eAAeC,GACpB,MAAMC,EAAiBhB,EAAES,cAAc,iBACjCQ,EAAwBjB,EAAES,cAAc,iBAAiBS,QAAQC,QACvEJ,EAAQK,SAASC,IACb,GAAIA,EAAQC,eAAgB,CACxB,MAAMH,EAAUE,EAAQE,OAClBC,EAAiBC,SAASJ,EAAQE,OAAOL,QAAQC,SACnDK,GAAkB,GAClBhB,mBAAmBkB,MAAMC,gBAAkB,sBAC3ChB,gBAAgBe,MAAME,MAAQ,QAC9BlB,OAAOU,SAASS,GAASA,EAAKH,MAAME,MAAM,YAE1CpB,mBAAmBkB,MAAMC,gBAAkB,kBAC3ChB,gBAAgBe,MAAME,MAAQ,kBAC9BlB,OAAOU,SAASS,GAASA,EAAKH,MAAME,MAAM,qBAE1CJ,EAAiBP,GACjBE,EAAQW,aAAa,cAAe,IACpCd,EAAee,gBAAgB,eAC/BvB,mBAAmBkB,MAAMM,UAAY,cAAe3B,KAAO,WACpDmB,EAAiBP,IACxBE,EAAQW,aAAa,cAAe,IACpCd,EAAee,gBAAgB,eAC/BvB,mBAAmBkB,MAAMM,UAAY,cAAe3B,KAAO,eAzB3EC,YAAYc,SAASa,GAASrB,SAASsB,QAAQD","file":"main.js","sourcesContent":["const d = document;\nconst options = {\n    rootMargin: \"0px\",\n    threshold: .8,\n};\nlet des = 0;\nconst $navegacion = d.querySelectorAll(\"[data-section]\");\nconst $navegacion__barra = d.querySelector(\".barra\");\nconst $icons = d.querySelectorAll(\".icons i\");\nconst $navegacion__ul = d.querySelector('.navegacion__container ul')\nconst observer = new IntersectionObserver(desplazamiento, options);\n$navegacion.forEach((item) => observer.observe(item));\n\nfunction desplazamiento(entries) {\n    const section_active = d.querySelector(\"[data-active]\");\n    const section_active_number = d.querySelector(\"[data-active]\").dataset.section;\n    entries.forEach((element) => {            \n        if (element.isIntersecting) {\n            const section = element.target;\n            const section_number = parseInt(element.target.dataset.section);\n            if (section_number >= 1) {\n                $navegacion__barra.style.backgroundColor = \"var(--color-accent)\";\n                $navegacion__ul.style.color = \"white\";\n                $icons.forEach((elem) => elem.style.color=\"white\");\n            }else{\n                $navegacion__barra.style.backgroundColor = \"var(--color-bg)\";\n                $navegacion__ul.style.color = \"var(--color-bg)\";\n                $icons.forEach((elem) => elem.style.color=\"var(--color-bg)\");\n            }\n            if (section_number > section_active_number) {\n                section.setAttribute(\"data-active\", \"\");\n                section_active.removeAttribute(\"data-active\");\n                $navegacion__barra.style.transform = `translateY(${(des += 4.5)}rem)`;\n            } else if (section_number < section_active_number) {\n                section.setAttribute(\"data-active\", \"\");\n                section_active.removeAttribute(\"data-active\");\n                $navegacion__barra.style.transform = `translateY(${(des -= 4.5)}rem)`;\n            }\n        }\n    });\n}\n"]}